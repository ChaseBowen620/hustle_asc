# Generated by Django 4.2.18 on 2025-10-19 21:23

from django.db import migrations, models


def migrate_event_data(apps, schema_editor):
    """Migrate data from EventType to new organization and function fields."""
    Event = apps.get_model('api', 'Event')
    EventType = apps.get_model('api', 'EventType')
    
    # Define mapping from event type names to organizations
    type_to_org_mapping = {
        'Innovation Lab': 'ASC',
        'Speaker Event': 'ASC',
        'Open Forum': 'ASC',
        'Competition': 'ASC',
        'Five-Slide Friday': 'ASC',
        'PyData Meetup': 'PyData',
        'Maker Monday': 'ASC',
        'Social': 'ASC',
        'SOC': 'SOC',
        'General': 'ASC'
    }
    
    # Update all events with the new fields
    for event in Event.objects.all():
        if event.event_type:
            # Set function to the event type name
            event.function = event.event_type.name
            # Set organization based on mapping
            event.organization = type_to_org_mapping.get(event.event_type.name, 'ASC')
        else:
            # Default values for events without event_type
            event.function = 'General'
            event.organization = 'ASC'
        
        # Save without triggering signals
        Event.objects.filter(id=event.id).update(
            function=event.function,
            organization=event.organization
        )


def reverse_migrate_event_data(apps, schema_editor):
    """Reverse migration - this is not fully reversible."""
    # This migration is not easily reversible since we're removing the EventType model
    # In a real scenario, you might want to preserve the EventType data
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0008_alter_eventtype_options_eventtype_function_and_more'),
    ]

    operations = [
        # Step 1: Add new fields to Event model
        migrations.AddField(
            model_name='event',
            name='organization',
            field=models.CharField(
                max_length=100,
                help_text="Organization hosting the event (must match an AdminUser role)",
                default='ASC'
            ),
        ),
        migrations.AddField(
            model_name='event',
            name='function',
            field=models.CharField(
                max_length=100,
                help_text="Type/function of the event",
                default='General'
            ),
        ),
        
        # Step 2: Migrate data from EventType to new fields
        migrations.RunPython(migrate_event_data, reverse_migrate_event_data),
        
        # Step 3: Remove the event_type foreign key
        migrations.RemoveField(
            model_name='event',
            name='event_type',
        ),
        
        # Step 4: Delete the EventType model
        migrations.DeleteModel(
            name='EventType',
        ),
    ]
